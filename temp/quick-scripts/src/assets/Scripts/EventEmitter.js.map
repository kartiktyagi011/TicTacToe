{"version":3,"sources":["assets\\Scripts\\EventEmitter.ts"],"names":[],"mappings":";;;;;;;AAAA;IAII;QACI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAEpB,CAAC;IAED,yBAAE,GAAF,UAAG,KAAa,EAAE,QAAa,EAAE,IAAS;QACtC,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,QAAQ,EAAE;YACxC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;SAC1B;QAED,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,qCAAc,GAAd,UAAe,KAAa,EAAE,QAAa,EAAE,IAAS;QAClD,IAAI,GAAG,CAAC;QACR,uBAAuB;QACvB,sBAAsB;QACtB,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,QAAQ,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,QAAQ,EAAE;YACjF,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC3C,+CAA+C;YAC/C,eAAe;YACf,qCAAqC;YAErC,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE;gBACV,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBAClC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;aACpC;YACD,qCAAqC;SAExC;IACL,CAAC;IAED,2BAAI,GAAJ,UAAK,KAAa;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QAC9B,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,CAAC;QAEhC,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,QAAQ,EAAE;YACxC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;YACvC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;YAClC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;YAE1B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzB,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;oBACpC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;iBACtC;qBACI;oBACD,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBAClC;aACJ;SACJ;IACL,CAAC;IAUL,mBAAC;AAAD,CAlEA,AAkEC,IAAA;AAlEY,oCAAY;AAoEzB,IAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAA;AAO9B,MAAM,CAAC,YAAY,GAAG,KAAK,CAAA","file":"","sourceRoot":"/","sourcesContent":["export class EventEmitter {\r\n    events: any;\r\n    hosts: any;\r\n\r\n    constructor() {\r\n        this.events = {};\r\n        this.hosts = {};\r\n        \r\n    }\r\n\r\n    on(event: string, listener: any, host: any) {\r\n        if (typeof this.events[event] !== 'object') {\r\n            this.events[event] = [];\r\n            this.hosts[event] = [];\r\n        }\r\n\r\n        this.events[event].push(listener);\r\n        this.hosts[event].push(host);\r\n    }\r\n\r\n    removeListener(event: string, listener: any, host: any) {\r\n        var idx;\r\n        // cc.log(this.events);\r\n        // cc.log(this.hosts);\r\n        if (typeof this.events[event] === 'object' && typeof this.hosts[event] === 'object') {\r\n            idx = this.events[event].indexOf(listener);\r\n            // id = Array.indexOf(this.hosts[event], host);\r\n            // cc.log(idx);\r\n            // cc.log(this.events[event].length);\r\n\r\n            if (idx > -1) {\r\n                this.events[event].splice(idx, 1);\r\n                this.hosts[event].splice(idx, 1);\r\n            }\r\n            // cc.log(this.events[event].length);\r\n\r\n        }\r\n    }\r\n\r\n    emit(event: string, ...args: any[]) {\r\n        var i, hosts, listeners, length;\r\n\r\n        if (typeof this.events[event] === 'object') {\r\n            listeners = this.events[event].slice();\r\n            hosts = this.hosts[event].slice();\r\n            length = listeners.length;\r\n\r\n            for (i = 0; i < length; i++) {\r\n                if (this.events[listeners[i]] !== null) {\r\n                    listeners[i].apply(hosts[i], args);\r\n                }\r\n                else {\r\n                    listeners[i].apply(this, args);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // once(event: string, listener: any, host: any) {\r\n    //     this.on(event, () => {\r\n    //         this.removeListener(event, listener, host);\r\n    //         listener.apply(this, arguments);\r\n    //     }, host);\r\n    // }\r\n    \r\n\r\n}\r\n\r\nconst event = new EventEmitter()\r\n\r\ndeclare global {\r\n    interface Window {\r\n      EventEmitter: EventEmitter;\r\n    } \r\n  }\r\n  window.EventEmitter = event\r\n"]}